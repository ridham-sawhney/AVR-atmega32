
//program to exchange the contents of register and mem loc 0x0100

/*LDI R27,$1 ;X-->[0x0100]
LDI R16,$20


MOV R17,R16
LD R16,X

ST X,R17*/



//program to exchange contents of two memory locations 0x0100 and 0x0200
/*
LDI R27,$1;X---->0x0100
LDI R28,$2;Y->0x0200

LD R16,X
LD R17,Y

ST X,R17
ST Y,R16
*/

//Read 2 numbers one from port B and one from mem loc 0x0100. display the biggest in R10
/*
LDI R16,$0
OUT DDRB,R16 ;make port b as input

IN R16,PINB
MOV R15,R16 ;save a copy in R15

LDS R17,0X0100  ; read value in R17

CLC  ;clear carry

SUB R16,R17
BRLO NEXT; Branch to next label if R16<R17(If C=1)
MOV R10,R15
JMP LAST
NEXT: MOV R10,R17
LAST: NOP  ;NO OPERATION


*/


//READ A NUMBER FROM PORT B AND CHECK IF ITS ODD OR EVEN , STORE 0X00 IN PORT C IF EVEN ELSE STORE OXFF
/*
LDI R16,$0
OUT DDRB,R16 ; MAKE PORT B AS INPUT


LDI R16,$FF
OUT DDRC,R16; PORT C AS OUTPUT

IN R16,PINB
MOV R15,R16

LSR R15 ; LOGICAL SHIFT RIGHT R15 SO THAT LSB MOVES TO CARRY

	BRLO ODD; IF C=1.JUMP TO ODD
	LDI R16,$0
	OUT PORTC,R16
	JMP LAST
ODD: LDI R16,$FF
	OUT PORTC,R16
LAST:NOP
*/

//COUNT THE NUMBER OF 1'S IN A BYTE AND STORE THE COUNT IN R10
/*
LDI R17,$8
LDI R16,$6

PREV:LSR R16 
	 ORCC LAST1
	 INC R10
	 JMP LAST

LAST1: INC R20

LAST :DEC R17
	  BRNE PREV
*/

//STORE 'n' NATURAL NUMBERS FROM LOCATION OX0200 ONWARDS, READ THE LIMIT FROM LOCATION 0X0100
LDS R17,0X0100
LDI R16,$0
STS R18,0X0200

PREV:MOV R18,R16
     INC R16
	 INC R18
	 MOV R20,R17
	 SUB R20,R16
	 BRLO PREV
	 JMP NEXT
NEXT:NOP

//SUM OF N NATURAL NOS STORE THE RESULT IN 0X0100
//SUM OF RRAY ELEMENTS OF SIZE N
// BIGGEST NUMBER IN AN ARRAY
	 

 